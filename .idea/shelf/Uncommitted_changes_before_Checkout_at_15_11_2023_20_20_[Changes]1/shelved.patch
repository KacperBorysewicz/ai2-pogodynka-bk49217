Index: pogodynka/config/routes.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>controllers:\r\n    resource:\r\n        path: ../src/Controller/\r\n        namespace: App\\Controller\r\n    type: attribute\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pogodynka/config/routes.yaml b/pogodynka/config/routes.yaml
--- a/pogodynka/config/routes.yaml	
+++ b/pogodynka/config/routes.yaml	
@@ -3,3 +3,7 @@
         path: ../src/Controller/
         namespace: App\Controller
     type: attribute
+
+app_logout:
+    path: /logout
+    methods: GET
Index: pogodynka/config/packages/security.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>security:\r\n    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords\r\n    password_hashers:\r\n        Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface: 'auto'\r\n    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider\r\n    providers:\r\n        users_in_memory: { memory: null }\r\n    firewalls:\r\n        dev:\r\n            pattern: ^/(_(profiler|wdt)|css|images|js)/\r\n            security: false\r\n        main:\r\n            lazy: true\r\n            provider: users_in_memory\r\n\r\n            # activate different ways to authenticate\r\n            # https://symfony.com/doc/current/security.html#the-firewall\r\n\r\n            # https://symfony.com/doc/current/security/impersonating_user.html\r\n            # switch_user: true\r\n\r\n    # Easy way to control access for large sections of your site\r\n    # Note: Only the *first* access control that matches will be used\r\n    access_control:\r\n        # - { path: ^/admin, roles: ROLE_ADMIN }\r\n        # - { path: ^/profile, roles: ROLE_USER }\r\n\r\nwhen@test:\r\n    security:\r\n        password_hashers:\r\n            # By default, password hashers are resource intensive and take time. This is\r\n            # important to generate secure password hashes. In tests however, secure hashes\r\n            # are not important, waste resources and increase test times. The following\r\n            # reduces the work factor to the lowest possible values.\r\n            Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface:\r\n                algorithm: auto\r\n                cost: 4 # Lowest possible value for bcrypt\r\n                time_cost: 3 # Lowest possible value for argon\r\n                memory_cost: 10 # Lowest possible value for argon\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pogodynka/config/packages/security.yaml b/pogodynka/config/packages/security.yaml
--- a/pogodynka/config/packages/security.yaml	
+++ b/pogodynka/config/packages/security.yaml	
@@ -4,14 +4,23 @@
         Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
     # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
     providers:
-        users_in_memory: { memory: null }
+        # used to reload user from session & other features (e.g. switch_user)
+        app_user_provider:
+            entity:
+                class: App\Entity\User
+                property: username
     firewalls:
         dev:
             pattern: ^/(_(profiler|wdt)|css|images|js)/
             security: false
         main:
             lazy: true
-            provider: users_in_memory
+            provider: app_user_provider
+            form_login:
+                login_path: app_login
+                check_path: app_login
+            logout:
+                path: app_logout
 
             # activate different ways to authenticate
             # https://symfony.com/doc/current/security.html#the-firewall
@@ -22,8 +31,31 @@
     # Easy way to control access for large sections of your site
     # Note: Only the *first* access control that matches will be used
     access_control:
-        # - { path: ^/admin, roles: ROLE_ADMIN }
-        # - { path: ^/profile, roles: ROLE_USER }
+        - { path: ^/, roles: PUBLIC_ACCESS }
+
+    role_hierarchy:
+        ROLE_ADMIN:
+            - ROLE_USER
+            - ROLE_LOCATION_NEW
+            - ROLE_LOCATION_EDIT
+            - ROLE_LOCATION_DELETE
+            - ROLE_MEASUREMENT_NEW
+            - ROLE_MEASUREMENT_EDIT
+            - ROLE_MEASUREMENT_DELETE
+            -
+        ROLE_USER:
+            - ROLE_LOCATION_INDEX
+            - ROLE_LOCATION_SHOW
+            - ROLE_MEASUREMENT_INDEX
+            - ROLE_MEASUREMENT_SHOW
+
+        ROLE_USER2:
+            - ROLE_LOCATION_INDEX
+            - ROLE_LOCATION_SHOW
+            - ROLE_MEASUREMENT_INDEX
+
+
+
 
 when@test:
     security:
Index: pogodynka/templates/base.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n    <head>\r\n\r\n        <meta charset=\"UTF-8\">\r\n        <title>{% block title %}Welcome!{% endblock %}</title>\r\n        <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>âš«\uFE0F</text></svg>\">\r\n        {% block stylesheets %}\r\n            <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n        {% endblock %}\r\n\r\n        {% block javascripts %}\r\n            <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin=\"anonymous\"></script>\r\n        {% endblock %}\r\n\r\n\r\n        <style>\r\n            body {\r\n                background: url(\"https://placehold.co/100x100/FFFFFF/EFEFEF/png?text=49217\");\r\n            }\r\n        </style>\r\n\r\n    </head>\r\n    <body>\r\n\r\n        <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n            <div class=\"container-fluid\">\r\n                <span class=\"navbar-brand mb-0 h1\">W App</span>\r\n\r\n                <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"{{ path('app_location_index') }}\">Locations</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"{{ path('app_measurement_index') }}\">Measurements</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <div class=\"container\">\r\n            {% block body %}{% endblock %}\r\n        </div>\r\n\r\n    </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pogodynka/templates/base.html.twig b/pogodynka/templates/base.html.twig
--- a/pogodynka/templates/base.html.twig	
+++ b/pogodynka/templates/base.html.twig	
@@ -40,6 +40,13 @@
                         </li>
                     </ul>
                 </div>
+
+                {% if is_granted('ROLE_USER') %}
+                    <a href="{{ path('app_logout') }}">Logout</a>
+                {% else %}
+                    <a href="{{ path('app_login') }}">Login</a>
+                {% endif %}
+
             </div>
         </nav>
         <div class="container">
Index: pogodynka/templates/login/index.html.twig
===================================================================
diff --git a/pogodynka/templates/login/index.html.twig b/pogodynka/templates/login/index.html.twig
new file mode 100644
--- /dev/null	
+++ b/pogodynka/templates/login/index.html.twig	
@@ -0,0 +1,22 @@
+{% extends 'base.html.twig' %}
+
+{% block title %}Login{% endblock %}
+
+{% block body %}
+    {% if error %}
+        <div>{{ error.messageKey|trans(error.messageData, 'security') }}</div>
+    {% endif %}
+
+    <form action="{{ path('app_login') }}" method="post">
+        <label for="username">Username:</label>
+        <input type="text" id="username" name="_username" value="{{ last_username }}"/>
+
+        <label for="password">Password:</label>
+        <input type="password" id="password" name="_password"/>
+
+        {# If you want to control the URL the user is redirected to on success
+        <input type="hidden" name="_target_path" value="/admin"/> #}
+
+        <button type="submit">login</button>
+    </form>
+{% endblock %}
\ No newline at end of file
